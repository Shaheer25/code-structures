[tox]
envlist =
    coverage, docs-html, docs-singlehtml, docs-pdf, isort, lint, bumpversion, code-formatter, code-formatter-check, generate-openapi, build-and-publish-confluence
    py36, py37, py38
skip_missing_interpreters = true


[testenv]
description = Run environment
basepython =
    {coverage,docs-html,docs-singlehtml,docs-pdf,isort,lint,bumpversion,code-formatter,code-formatter-check,generate-openapi,build-and-publish-confluence}: {env:TOXPYTHON:python3}
    py36: {env:TOXPYTHON:python3.6}
    py37: {env:TOXPYTHON:python3.7}
    py38: {env:TOXPYTHON:python3.8}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=1
    PYTHONDONTWRITEBYTECODE=1
passenv = *
install_command = pip install {opts} {packages}
deps =
    pdbpp
    pytest
    pytest-mock
usedevelop = false
commands = py.test -v {posargs} tests


[testenv:coverage]
description = Run coverage
deps =
    pytest
    pytest-mock
    pytest-cov
    coverage
commands =
    py.test --cov-report= --cov=src tests/
    coverage report -m
    coverage xml


[testenv:docs-html]
description = Generate HTML docs
skip_install = true
deps = -r{toxinidir}/docs/requirements.txt
commands = sphinx-build -a -E -W -b html {toxinidir}/docs/source/ {toxinidir}/docs/build/html


[testenv:docs-singlehtml]
description = Generate single HTML page docs
skip_install = true
deps = -r{toxinidir}/docs/requirements.txt
commands = sphinx-build -a -E -W -b singlehtml {toxinidir}/docs/source/ {toxinidir}/docs/build/singlehtml


[testenv:docs-pdf]
description = Generate PDF docs
skip_install = true
deps = -r{toxinidir}/docs/requirements.txt
commands = sphinx-build -M latexpdf {toxinidir}/docs/source/ {toxinidir}/docs/build/


[testenv:isort]
description = Sort imports according to PEP rules
skip_install = true
deps = isort==4.3.21
commands = isort --skip-glob .*@\d+-\d+-\d+ --recursive src tests setup.py -j 10


[testenv:lint]
description = Static syntax checker
skip_install = true
deps =
    isort==4.3.21
    flake8
    flake8-debugger
    pep8-naming
commands =
    isort --check-only --diff --recursive src tests setup.py
    flake8 src tests setup.py

[testenv:bumpversion]
description = Bump version number
skip_install = true
deps =
    bumpversion
commands =
    bumpversion --verbose {posargs}

[testenv:code-formatter]
description = Makes all your code compliant with the code formatter
deps = black
skip_install = true
commands = black --line-length 120 src/ tests/ --exclude pybind


[testenv:code-formatter-check]
description = Checks if your code if compliant with the code formatter
deps = black
skip_install = true
commands = black --check --line-length 120 src/ tests/ --exclude pybind


[testenv:generate-openapi]
description = Generate openapi v3 specification file
deps =
    prance
    click
    openapi_spec_validator
skip_install = true
commands = prance compile {toxinidir}/openapi/index.yaml {toxinidir}/openapi/spec.yaml


[testenv:validate-openapi]
description = Validate openapi v3 specification file
deps =
    prance
    click
    openapi_spec_validator
skip_install = true
commands = prance validate {toxinidir}/openapi/index.yaml


[testenv:build-and-publish-confluence]
description = "Build and publish documentation to confluence"
skip_install = true
deps = -r{toxinidir}/docs/requirements.txt
commands = sphinx-build -a -E -v -W -b confluence {toxinidir}/docs/source/ {toxinidir}/docs/build/confluence
